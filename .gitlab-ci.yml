stages:
  - check

variables:
  R_LIBS_USER: "$CI_PROJECT_DIR/ci/lib"

default:
  tags: [docker]

cache:
  key: "airGRdatassim-${R_VERSION}"
  paths:
    - $R_LIBS_USER

before_script:
  - mkdir -p $R_LIBS_USER
  - echo "R_LIBS='$R_LIBS_USER'" > .Renviron
  - R -e 'remotes::install_deps(dependencies = TRUE)'


.Rdevel:
  image: rocker/verse:devel
  variables:
    R_VERSION: devel

.Rpatched:
  only:
    refs:
      - tags
      - schedules
  image: rocker/verse:latest
  variables:
    R_VERSION: patched

.check_airGR_cran:
  stage: check
  script:
    - tlmgr install ec && tlmgr install cm-super
    - R -e 'remotes::install_packages("airGR")'
    - R -e 'remotes::update_packages("rcmdcheck")'
    - R -e 'rcmdcheck::rcmdcheck(args = "--as-cran", error_on = "warning")'

.check_airGR_notcran:
  stage: check
  script:
    - tlmgr install ec && tlmgr install cm-super
    - R -e 'remotes::install_gitlab("HYCAR-Hydro/airgr@dev", host = "gitlab.irstea.fr")'
    - R -e 'remotes::update_packages("rcmdcheck")'
    - R -e 'rcmdcheck::rcmdcheck(args = "--as-cran", error_on = "warning")'

check_patched_airGR_cran:
  extends:
    - .Rpatched
    - .check_airGR_cran

check_devel_airGR_cran:
  extends:
    - .Rdevel
    - .check_airGR_cran

check_patched_airGR_notcran:
  extends:
    - .Rpatched
    - .check_airGR_notcran

check_devel_airGR_notcran:
  extends:
    - .Rdevel
    - .check_airGR_notcran
